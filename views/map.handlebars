<style>
@font-face { font-family: 'SuperGroteskA-Bd'; src: url('/supergroteska-bd.TTF'); }
</style>
<div>
<h1 align="middle" style="font-family: 'SuperGroteskA-Bd';font-size:1.8em;">{{{__ "our"}}}&nbsp;{{{markers.length}}}&nbsp;{{{__ "auth"}}}</h1>
</div>
<div id="mapid" style="border-radius: 25px;width: 100%; height: 70vh; margin: 0; position: block;"></div>

<link rel="stylesheet" href="leaflet-search.css" />
<link rel="stylesheet" href="leaflet-search.mobile.css" />
<script src="leaflet-search.js"></script>
<script>
var yo;
if (navigator.geolocation) {
  navigator.geolocation.getCurrentPosition(function(location){
  lat = location.coords.latitude;
  long = location.coords.longitude;
   mymap = L.map('mapid',{
     maxBounds:[ [-90, -160], [90, 200] ],
     minZoom: 2
   }).setView([lat,long], 4);
    yo = L.marker([lat,long]).bindPopup("{{{__ "here"}}}");
   yo.addTo(mymap).openPopup();
displaydealers()
},showError,{ maximumAge:600000, timeout:5000, enableHighAccuracy: true })}

function showError(error) {
  switch(error.code) {
    case error.PERMISSION_DENIED:
    err =  "{{{__ "deny"}}}"
      break;
    case error.POSITION_UNAVAILABLE:
      err = "{{{__ "loca"}}}"
      break;
    case error.TIMEOUT:
    err = "{{{__ "tout"}}}"
      break;
    case error.UNKNOWN_ERROR:
      err =   "{{{__ "unkn"}}}"
      break;
  }
   mymap = L.map('mapid',{
     maxBounds:[ [-90, -160], [90, 200] ],
     minZoom: 2
   }).setView([0,0], 2);
    yo =  L.marker([0,0]).bindPopup("{{{__ "errl"}}}"+err+"{{{__ "turnon"}}}")
   yo.addTo(mymap).openPopup();
   displaydealers();
}

function displaydealers()
{

  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
     minZoom: 2,
    maxZoom: 17,
    id: 'mapbox.streets'
  }).addTo(mymap);

//searchLayer is a L.LayerGroup contains searched markers
  var myIcon = L.icon({
  iconUrl: 'images/rad.png',
  iconSize: [40, 50],
  iconAnchor: [20, 25],
  popupAnchor: [0,-25]});

  if (navigator.geolocation) {
         navigator.geolocation.getCurrentPosition(showPosition);
 function showPosition(position) {
  return [position.coords.latitude,position.coords.longitude];
 }
}
var milatlong = yo.getLatLng();
var dire = "{{{__ "addrex"}}}"
var tele = "{{{__ "phone"}}}"
var web = "{{{__ "web"}}}"
var estas = "{{{__ "youre"}}}"
var axkm = "{{{__ "away"}}}"
var markersLayer = new L.LayerGroup();
mymap.addLayer(markersLayer);
var marker = null;
  {{#each markers}}
  marker = L.marker([{{{lat}}},{{{long}}}], {title: "{{{nombredealer}}}", icon: myIcon}).bindPopup("<div align='middle'><h2>{{{nombredealer}}}</h2>{{{pais}}}<br>{{#if direccion}}<b>"+dire+"</b>{{{direccion}}}<br>{{/if}}{{#if telefono}}<b>"+tele+"</b>{{{telefono}}}{{/if}}{{#if pagweb}}<br><a target='_blank' href='{{{pagweb}}}'>"+web+"</a>{{/if}}{{#if email}}<br><b><a href=mailto:{{{email}}}>Email</a></b>{{/if}}<br><b>"+estas+milatlong.distanceTo([{{{lat}}},{{{long}}}]).toFixed(0)/1000+axkm+"</b></div>");
  marker.addTo(mymap);
  markersLayer.addLayer(marker);

  {{/each}}
  var searchControl = new L.Control.Search({layer: markersLayer, autoCollapse: true, position: 'topleft', initial: false, zoom: 10, textPlaceholder: '{{{__ "srch"}}}', textErr: '{{{__ "notfound"}}}'}).on('search:locationfound', function(e) {e.layer.openPopup();});
  searchControl.addTo(mymap);
}



</script>
